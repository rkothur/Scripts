=====Add Nodes Scripts=====

[svc-bdadmin@ncepnhpmsta0002 scripts]$ cat README.txt
Step 1: Create a host list - hosts.txt under /bigdata/scripts folder
Step 2: Run - $ ./cp-ssh-keys.ksh
        This script will copy the svc-bdadmin user's authorized keys to all the remote hosts
        It will also create the .ssh folder
        This script will ask for the svc-bdadmin users's password once
Step 3: Run - $ ./host-prechecks.ksh
        This script will copy remote-host-prechecks.ksh to all the remote hosts
        Executes the script
        Copies back the output file
        Validates all the checks
        Saves the output in host-prechecks-ncepnhpmsta0002.hadoop.charter.com-<DATE>-<TIME>.txt
Step 4: Run - $ export ANSIBLE_INVENTORY=/bigdata/scripts/hosts.txt
        Run - $ ansible-playbook copy-sysctl-pb.yml (This will copy the sysctl settings)
Step 5: Run - $ ansible-playbook copy-thp-pb.yml (This will disable Transparent Huge Pages)
Step 6: Run - $ ansible-playbook copy-java-jdbc-pb.yml (This will install java and jce)
Step 7: Run - $ ansible-playbook copy-repos-pb.yml (This will copy the repo files to all nodes)
Step 8: Run - $ ansible-playbook install-ambari-agent-pb.yml (This will install ambari-agent)


############ List of all the scripts used ############
cp-ssh-keys.ksh           - Copies svc-bdadmin user's authorized keys to all the remote hosts and creates .ssh folder
host-prechecks.ksh        - This is the script copies remote-host-prechecks.ksh, gets the info back and performs the checks
copy-java-jdbc-pb.yml     - Copies the Java, JCE and ojbdc7.jar files to remote hosts
copy-repos-pb.yml         - Copies the Ambari and HDP Repos to the remote hosts
copy-fingerprints-pb.yml  - Called by cp-ssh-keys.ksh
copy-ssh-keys-pb.yml      - Called by cp-ssh-keys.ksh
remote-host-prechecks.ksh - Called by host-prechecks.ksh
copy-sysctl-pb.yml        - Copies the Bigdata settings to sysctl.conf file
install-ambari-agent-pb.yml - Installs Ambari Agent and starts the service on remote hosts
copy-thp-pb.yml             - Disables transparent hugepages on remote hosts

############ Output files generated by the scrits ############
cp-ssh-keys-ncepnhpmsta0002.hadoop.charter.com-<date>-<time>.txt    - Outut from cp-ssh-keys.ksh
host-prechecks-ncepnhpmsta0002.hadoop.charter.com-<date>-<time>.txt - Outut from host-prechecks.ksh
remotehost-prechecks-vm0pnhfamba0001-<date>-<time>.txt              - Outut from remote-host-prechecks.ksh



[svc-bdadmin@ncepnhpmsta0002 scripts]$ cat hosts.txt
[datanodes]
ncepnhpwrka0153.hadoop.charter.com
ncepnhpwrka0154.hadoop.charter.com
ncepnhpwrka0155.hadoop.charter.com
ncepnhpwrka0156.hadoop.charter.com
ncepnhpwrka0157.hadoop.charter.com
ncepnhpwrka0158.hadoop.charter.com



[svc-bdadmin@ncepnhpmsta0002 scripts]$ cat cp-ssh-keys.ksh
#!/bin/ksh

###################
#
# Script to copy the keys to the remote hosts
# Written by: Ram
# Date:
#
###################

#### Variables used in the script
#### Note: Do not modify these variabes
PATH=/usr/share/centrifydc/bin/:/bin:/usr/bin:/sbin:/usr/sbin:/opt/VRTS/bin:/usr/sbin/hbanyware
export PATH
NOW=$(date +"%Y%m%d-%H%M")
HST=$(hostname)
BOLD=`tput smso`
OFFBOLD=`tput rmso`;
OUTDIR="/bigdata/scripts/"
OUTFILE="${OUTDIR}/cp-ssh-keys-${HST}-${NOW}.txt"
TAB="\t"
NEWLN="\n"
HEADER="############"

##### Change the ansible hosts file if different
export ANSIBLE_INVENTORY=/bigdata/scripts/hosts.txt

#====================================
# Verify if svc-bdadmin is running the script
#=====================================
CHUSER=$(/usr/bin/id|awk -F"(" '{print $2}'|awk -F")" '{print $1}')
if [ "$CHUSER" != "svc-bdadmin" ]
  then
    echo
    echo "Sorry you must run the script as svc-bdadmin user"
    echo
    exit 1
fi

#====================================
# Get the server list
#=====================================
echo "$HEADER  Working on the following hosts $HEADER" | tee -a $OUTFILE
cat $ANSIBLE_INVENTORY | tee -a $OUTFILE

#====================================
# Copy fingerprits to localhost
#=====================================
echo $NEWLN | tee -a $OUTFILE
echo $NEWLN | tee -a $OUTFILE
echo "$HEADER Copying fingerprints to localhost $HEADER" | tee -a $OUTFILE
ansible-playbook copy-fingerprints-pb.yml | tee -a $OUTFILE


#====================================
# Create .ssh and copy authorized keys to remote hosts
#=====================================
echo $NEWLN | tee -a $OUTFILE
echo $NEWLN | tee -a $OUTFILE
echo "$HEADER Creating .ssh and copy authorized keys $HEADER" | tee -a $OUTFILE
echo "You have to enter the svc-bdadmin password once" | tee -a $OUTFILE
ansible-playbook copy-ssh-keys-pb.yml --ask-pass | tee -a $OUTFILE

echo $NEWLN | tee -a $OUTFILE
echo $NEWLN | tee -a $OUTFILE
[svc-bdadmin@ncepnhpmsta0002 scripts]$




[svc-bdadmin@ncepnhpmsta0002 scripts]$ cat copy-sysctl-pb.yml
---
- hosts: datanodes
  become: yes
  become_user: root
  become_method: dzdo
  gather_facts: no
  vars:
    ambari_server: ncepnhpmsta0002.hadoop.charter.com

  tasks:
  - name: copy sysctl.conf settings to remote hosts
    blockinfile:
      dest: /etc/sysctl.conf
      block: |
         # Start BigData Settings
         # Set swappiness to avoid swapping processes out of memory and decrase disk I/O
         vm.swappiness = 1
         # Disable IPv6
         net.ipv6.conf.all.disable_ipv6=1
         net.ipv6.conf.default.disable_ipv6=1
         # Write out of dirty data begins in the background when dirty pages this %
         vm.dirty_ratio = 80
         vm.dirty_background_ratio = 5
         # default size of write buffers used by sockets in bytes
         net.core.wmem_default = 212992
         # default size of receive buffers used by sockets in bytes
         net.core.rmem_default = 212992
         # Max write buffer size for all connections
         net.core.wmem_max = 2097152
         # Max read buffer size for all connections
         net.core.rmem_max = 2097152
         # TCP Autotuning setting - receive/write
         # The first value = min receive buffer for each TCP connection
         # The second value = default receive buffer allocated for each TCP socket.
         # The third and last value = maximum receive buffer that can be allocated for a TCP socket.
         net.ipv4.tcp_wmem = 4096 65536 4194304
         net.ipv4.tcp_rmem = 4096 87380 6291456
         # option to enlarge the transfer window
         net.ipv4.tcp_window_scaling = 1
         # max no of remembered connection requests, which still have not received an acknowledgment from connecting clients
         net.ipv4.tcp_max_syn_backlog = 2048
         # Handle SYN floods and large numbers
         net.core.netdev_max_backlog = 2000
         # Increase number of incoming connections that can queue up before dropping
         net.core.somaxconn = 8192
         # End BigData Settings

  - name: reload sysctl
    shell: /sbin/sysctl -p
[svc-bdadmin@ncepnhpmsta0002 scripts]$






[svc-bdadmin@ncepnhpmsta0002 scripts]$ cat copy-thp-pb.yml
---
- hosts: datanodes
  become: yes
  become_user: root
  become_method: dzdo
  gather_facts: no
  vars:
    ambari_server: ncepnhpmsta0002.hadoop.charter.com

  tasks:
  - name: Disable THP
    blockinfile:
      dest: /etc/rc.d/rc.local
      block: |
        if test -f /sys/kernel/mm/transparent_hugepage/enabled; then
           echo never > /sys/kernel/mm/transparent_hugepage/enabled
        fi
        if test -f /sys/kernel/mm/transparent_hugepage/defrag; then
           echo never > /sys/kernel/mm/transparent_hugepage/defrag
        fi

  - name: Manually run the command
    shell: echo never > /sys/kernel/mm/transparent_hugepage/enabled;echo never > /sys/kernel/mm/transparent_hugepage/defrag
[svc-bdadmin@ncepnhpmsta0002 scripts]$





[svc-bdadmin@ncepnhpmsta0002 scripts]$ cat copy-java-jdbc-pb.yml
---
- hosts: datanodes
  become: yes
  become_user: root
  become_method: dzdo

  tasks:
  - name: mkdir /usr/jdk64 and chmod for java
    file:
      path: /usr/jdk64
      owner: root
      group: root
      mode: 0755
      state: directory

  - name: mkdir /usr/share/java and chmod for ojdbc
    file:
      path: /usr/share/java
      owner: root
      group: root
      mode: 0755
      state: directory

  - name: copy and extract java and jce
    unarchive:
      src: /bigdata/scripts/jdk-jce.tar
      dest: /usr/jdk64

  - name: copy ojdbc7.tar
    copy:
      src: /bigdata/scripts/ojdbc7.jar
      dest: /usr/share/java
      owner: root
      group: root
      mode: 0755

  - name: create link for java
    file:
      src: /usr/jdk64/jdk1.8.0_162/
      path: /usr/jdk64/latest
      state: link

[svc-bdadmin@ncepnhpmsta0002 scripts]$







[svc-bdadmin@ncepnhpmsta0002 scripts]$ cat copy-repos-pb.yml
---
- hosts: datanodes
  become: yes
  become_user: root
  become_method: dzdo

  tasks:
  - name: copy ambari repo
    copy:
      src: /bigdata/scripts/ambari-2.6.1.5.repo
      dest: /etc/yum.repos.d
      owner: root
      group: root
      mode: 0755

  - name: copy hdp and hdp-utils repo
    copy:
      src: /bigdata/scripts/ambari-hdp-1.repo
      dest: /etc/yum.repos.d
      owner: root
      group: root
      mode: 0755

[svc-bdadmin@ncepnhpmsta0002 scripts]$








[svc-bdadmin@ncepnhpmsta0002 scripts]$ cat install-ambari-agent-pb.yml
---
- hosts: datanodes
  become: yes
  become_user: root
  become_method: dzdo
  gather_facts: no
  vars:
    ambari_server: 'ncepnhpmsta0002.hadoop.charter.com'

  tasks:
  - name: swap the hostname entries in the /etc/hosts file
    shell: sed -i '/hadoop/ s/^\(.*\) [ ]* \(.*\) [ ]* \(.*\)/\1 \3 \2/' /etc/hosts

  - name: disable platform verify for python
    shell: sed -i '/^verify=platform_default/ s/^/#/; /verify=/a verify=disable' /etc/python/cert-verification.cfg

  - name: install ambari agent on the nodes
    package:
      name: ambari-agent
      state: present

  - name:  enable ambari-agent and start it
    service:
      name: ambari-agent
      state: started
      enabled: yes

  - name: change the ambari server name in the agent configs
    shell: sed -i 's/hostname=.*/hostname={{ ambari_server }}/' /etc/ambari-agent/conf/ambari-agent.ini
[svc-bdadmin@ncepnhpmsta0002 scripts]$








